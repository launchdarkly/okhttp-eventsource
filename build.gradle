apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'idea'
apply plugin: 'io.codearte.nexus-staging'

repositories {
    mavenLocal()
    // Before LaunchDarkly release artifacts get synced to Maven Central they are here along with snapshots:
    maven { url "https://oss.sonatype.org/content/groups/public/" }
    mavenCentral()
}

allprojects {
    group = 'com.launchdarkly'
    version = "${version}"
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
}

dependencies {
    compile "com.squareup.okhttp3:okhttp:3.8.1"
    compile "org.slf4j:slf4j-api:1.7.22"
    testRuntime "ch.qos.logback:logback-classic:1.1.9"
    testCompile "org.mockito:mockito-core:1.10.19"
    testCompile "junit:junit:4.11"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14-rc-3'
}

jar {
    baseName = 'okhttp-eventsource'
    manifest {
        attributes("Implementation-Version": version)
    }
}
buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.8.0"
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

signing {
    sign configurations.archives
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

nexusStaging {
    packageGroup = "com.launchdarkly"
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'okhttp-eventsource'
                packaging 'jar'
                description 'EventSource Implementation built on OkHttp'
                url 'https://github.com/launchdarkly/okhttp-eventsource'

                scm {
                    connection 'scm:git:https://github.com/launchdarkly/okhttp-eventsource'
                    developerConnection 'scm:git:https://github.com/launchdarkly/okhttp-eventsource'
                    url 'https://github.com/launchdarkly/okhttp-eventsource'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        name 'LaunchDarkly'
                        email 'team@launchdarkly.com'
                    }
                }
            }
        }
    }
}
